{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"User Score vs. Critic Score","provenance":[],"collapsed_sections":[],"mount_file_id":"1_7n4Oz7P5ObSm11yTu8pe0cHY4FTcFHW","authorship_tag":"ABX9TyMHVJhQ1ncNgjQgYz/+5F9F"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":18,"metadata":{"id":"0qpOuFjz9lw5","executionInfo":{"status":"ok","timestamp":1649643377696,"user_tz":240,"elapsed":399,"user":{"displayName":"Jorin Kramer","userId":"06922887966834944281"}}},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","df = pd.read_csv('/content/drive/Shareddrives/302 Project/Data/GameSales.csv')\n","df = df.dropna(subset=['critic_score', 'user_score'])\n","df = df.sort_values(by=\"total_sales\", ascending=False)"]},{"cell_type":"code","source":["#!pip install seaborn_qqplot"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tdiH1wxyBj1G","executionInfo":{"status":"ok","timestamp":1649635574440,"user_tz":240,"elapsed":3672,"user":{"displayName":"Jorin Kramer","userId":"06922887966834944281"}},"outputId":"15470e81-01b9-4cc9-f14e-a333eb3be664"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting seaborn_qqplot\n","  Downloading seaborn_qqplot-0.5.0-py3-none-any.whl (12 kB)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from seaborn_qqplot) (1.4.1)\n","Requirement already satisfied: tabulate in /usr/local/lib/python3.7/dist-packages (from seaborn_qqplot) (0.8.9)\n","Requirement already satisfied: seaborn in /usr/local/lib/python3.7/dist-packages (from seaborn_qqplot) (0.11.2)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from seaborn_qqplot) (1.3.5)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas->seaborn_qqplot) (2018.9)\n","Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.7/dist-packages (from pandas->seaborn_qqplot) (1.21.5)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas->seaborn_qqplot) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas->seaborn_qqplot) (1.15.0)\n","Requirement already satisfied: matplotlib>=2.2 in /usr/local/lib/python3.7/dist-packages (from seaborn->seaborn_qqplot) (3.2.2)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.2->seaborn->seaborn_qqplot) (3.0.7)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.2->seaborn->seaborn_qqplot) (1.4.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.2->seaborn->seaborn_qqplot) (0.11.0)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from kiwisolver>=1.0.1->matplotlib>=2.2->seaborn->seaborn_qqplot) (3.10.0.2)\n","Installing collected packages: seaborn-qqplot\n","Successfully installed seaborn-qqplot-0.5.0\n"]}]},{"cell_type":"code","source":["#from seaborn_qqplot import pplot #seaborn-qqplot is a seaborn extension adding qqplots.\n","#pplot(data=df, x=\"critic_score\", y=\"user_score\", kind='qq', display_kws={\"identity\":True}, height=4, aspect=2)\n","\n","g = sns.FacetGrid(data=df, size=5)\n","g.map(plt.scatter, 'critic_score', 'user_score', s=18)\n","\n","plt.xlim(3, 10)\n","plt.ylim(3, 10)\n","\n","plt.xlabel(\"Critic Score\")\n","plt.ylabel(\"User Score\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"EpkzafpM-E_a","executionInfo":{"status":"ok","timestamp":1649644297796,"user_tz":240,"elapsed":574,"user":{"displayName":"Jorin Kramer","userId":"06922887966834944281"}},"outputId":"ba14d8cb-9747-4539-c265-7f9ab225474e"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/axisgrid.py:337: UserWarning: The `size` parameter has been renamed to `height`; please update your code.\n","  warnings.warn(msg, UserWarning)\n"]},{"output_type":"execute_result","data":{"text/plain":["Text(10.049999999999997, 0.5, 'User Score')"]},"metadata":{},"execution_count":44},{"output_type":"display_data","data":{"text/plain":["<Figure size 360x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]}]}